apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.appy"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++1z"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    task pythonPackage(description: 'Pack the appy package') {
        doLast {
            exec {
                workingDir = '/src/main/python/appy'
                commandLine = ['python', 'setup.py', 'sdist', '--formats=gztar']
            }
            copy {
                from '/src/main/python/appy/dist'
                into 'src/main/assets'
                rename 'appy.*\\.tar\\.gz', 'appy.targz'
            }
            copy {
                from '/src/main/python/logcat.py'
                into 'src/main/assets'
            }
            copy {
                from '/src/main/python/main.py'
                into 'src/main/assets'
            }
        }
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn pythonPackage
    }

    // Encapsulates your external native build configurations.
    externalNativeBuild {

        // Encapsulates your CMake build configurations.
        cmake {
            // Provides a relative path to your CMake build script.
            path "CMakeLists.txt"
        }
    }

    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86, armeabi-v7a, and mips.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "armeabi-v7a"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'org.kamranzafar:jtar:2.3'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:preference-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
