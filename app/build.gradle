apply plugin: 'com.android.application'

android {
    compileSdkVersion 29

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/INDEX.LIST'
    }

    defaultConfig {
        applicationId "com.appy.app"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 15
        versionName "1.15"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++1z"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    task pythonPackage(description: 'Pack the appy package') {
        doLast {
            delete fileTree('/src/main/python/appy/dist') {
            }
            exec {
                workingDir = '/src/main/python/appy'
                commandLine = ['python', 'setup.py', 'sdist', '--formats=gztar']
            }
            copy {
                from '/src/main/python/appy/dist'
                into 'src/main/assets'
                rename 'appy.*\\.tar\\.gz', 'appy.targz'
            }
            copy {
                from '/src/main/python/logcat.py'
                into 'src/main/assets'
            }
            copy {
                from '/src/main/python/main.py'
                into 'src/main/assets'
            }
        }
    }

    task pythonExamples(type: Tar, description: 'Pack the appy examples') {
        from '/src/main/python/examples'
        archiveFileName = 'examples.targz'
        destinationDirectory = file('src/main/assets')
        compression = Compression.GZIP
    }

    task pythonTask {
        dependsOn 'pythonPackage'
        dependsOn 'pythonExamples'
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn pythonTask
    }

    // Encapsulates your external native build configurations.
    externalNativeBuild {

        // Encapsulates your CMake build configurations.
        cmake {
            // Provides a relative path to your CMake build script.
            path "CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDir 'src/main/cpp/exe'
        }
    }

    flavorDimensions "abi"

    productFlavors {
        arm {
            dimension "abi"
            ndk {
                abiFilter "armeabi-v7a"
                versionCode = 0     + android.defaultConfig.versionCode
            }
        }
        arm64 {
            dimension "abi"
            ndk {
                abiFilter "arm64-v8a"
                versionCode = 10000 + android.defaultConfig.versionCode
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'org.kamranzafar:jtar:2.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.preference:preference:1.1.1'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
